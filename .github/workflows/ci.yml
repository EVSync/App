name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Pre-fetch dependencies
        run: mvn dependency:go-offline

      - name: Build project
        run: mvn clean install -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            backend/target/classes
            backend/target/*.jar

  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: backend

    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: backend/target/

      - name: Run tests and generate coverage
        run: mvn test jacoco:report -T 4

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: backend/target/site/jacoco/

  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: backend/target/

      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: backend/target/site/jacoco/

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=EVSync_App \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  it:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: backend/target/

      - name: Run integration tests
        run: mvn verify -DskipUnitTests

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: backend/target/failsafe-reports/
  
  xray:
    name: Import Integration Test Results to Xray
    runs-on: ubuntu-latest
    needs: it
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download integration test results
        uses: actions/download-artifact@v4
        with:
          name: integration-test-results
          path: test-results/

      - name: Check if test results exist
        run: |
          if [ -z "$(ls -A test-results 2>/dev/null)" ]; then
            echo "No test result files found. Skipping Xray upload."
            exit 0
          fi

      - name: Import results to Xray
        uses: mikepenz/xray-action@v3.2.0-rc01
        with:
          xrayCloud: true
          username: ${{ secrets.XRAY_CLIENT_ID }}
          password: ${{ secrets.XRAY_CLIENT_SECRET }}
          testPaths: 'test-results/TEST-*.xml'
          testFormat: junit
          projectKey: TQS

    
