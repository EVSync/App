services:
  frontend:
    build:
      context: ./frontend/evsync
      dockerfile: ../Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/evsync:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network



  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE:   mydb
      MYSQL_USER:       myuser
      MYSQL_PASSWORD:   mypass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - app-network

  
  backend:
    build: 
      context: ./backend       
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
        mysql:
          condition: service_healthy
    networks:
      - app-network


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - app-network

volumes:
  mysql-data:
  grafana-storage:

networks:
  app-network:
    driver: bridge
